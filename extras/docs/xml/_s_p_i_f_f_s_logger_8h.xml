<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_s_p_i_f_f_s_logger_8h" kind="file" language="C++">
    <compoundname>SPIFFSLogger.h</compoundname>
    <includes local="no">Arduino.h</includes>
    <includes local="no">FS.h</includes>
    <includes local="no">time.h</includes>
    <incdepgraph>
      <node id="2">
        <label>FS.h</label>
      </node>
      <node id="3">
        <label>time.h</label>
      </node>
      <node id="1">
        <label>Arduino.h</label>
      </node>
      <node id="0">
        <label>src/SPIFFSLogger.h</label>
        <link refid="_s_p_i_f_f_s_logger_8h"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="struct_s_p_i_f_f_s_log_data" prot="public">SPIFFSLogData</innerclass>
    <innerclass refid="class_s_p_i_f_f_s_logger" prot="public">SPIFFSLogger</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_s_p_i_f_f_s_logger_8h_1af70a7c4bf0e665786ae633f14c7b351f" prot="public" static="yes" mutable="no">
        <type>const char _logFilenameFormat []</type>
        <definition>const char _logFilenameFormat [] PROGMEM</definition>
        <argsstring></argsstring>
        <name>PROGMEM</name>
        <initializer>= &quot;%s/%d%02d%02d&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SPIFFSLogger.h" line="27" column="1" bodyfile="src/SPIFFSLogger.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">SPIFFSLogger<sp/>-<sp/>A<sp/>minimal<sp/>library<sp/>for<sp/>binary<sp/>data<sp/>logging<sp/>in<sp/>ESP8266</highlight></codeline>
<codeline lineno="3"><highlight class="comment">Copyright<sp/>(C)<sp/>2018<sp/>Mario<sp/>Falcao</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment">This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment">it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published</highlight></codeline>
<codeline lineno="7"><highlight class="comment">by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="8"><highlight class="comment">(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment">This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="11"><highlight class="comment">but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="12"><highlight class="comment">MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="13"><highlight class="comment">GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight></codeline>
<codeline lineno="15"><highlight class="comment">You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="16"><highlight class="comment">along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__SPIFFSLOGGER_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__SPIFFSLOGGER_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Arduino.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;FS.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>internal<sp/>strings<sp/>stored<sp/>in<sp/>flash<sp/>for<sp/>efficiency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>_logFilenameFormat[]<sp/>PROGMEM<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;%s/%d%02d%02d&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="35" refid="struct_s_p_i_f_f_s_log_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_s_p_i_f_f_s_log_data" kindref="compound">SPIFFSLogData</ref></highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37" refid="struct_s_p_i_f_f_s_log_data_1a692b3adc90780d9388d6833d2170400c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>time_t<sp/><ref refid="struct_s_p_i_f_f_s_log_data_1a692b3adc90780d9388d6833d2170400c" kindref="member">timestampUTC</ref>;<sp/></highlight></codeline>
<codeline lineno="38" refid="struct_s_p_i_f_f_s_log_data_1a071121efdc7f6d95adc4dcdf736a84ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="struct_s_p_i_f_f_s_log_data_1a071121efdc7f6d95adc4dcdf736a84ec" kindref="member">data</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal">};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="51" refid="class_s_p_i_f_f_s_logger" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_s_p_i_f_f_s_logger" kindref="compound">SPIFFSLogger</ref></highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_p_i_f_f_s_logger_1afa8152a5d5d29fedbb04265cb4589359" kindref="member">SPIFFSLogger</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*directory,<sp/>uint16_t<sp/>daysToKeep<sp/>=<sp/>7,<sp/>uint16_t<sp/>processInterval<sp/>=<sp/>1000);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_p_i_f_f_s_logger_1abfc7ce5e1a8022705c6704e50edf087d" kindref="member">init</ref>();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_p_i_f_f_s_logger_1a34f24a3c6229653a31c166b899d43537" kindref="member">process</ref>();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_s_p_i_f_f_s_logger_1a2e914dd1884de9900288564a41bc55a4" kindref="member">write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;value);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_s_p_i_f_f_s_logger_1aeceb2db3a41feb387e874f247657e19c" kindref="member">readRows</ref>(<ref refid="struct_s_p_i_f_f_s_log_data" kindref="compound">SPIFFSLogData&lt;T&gt;</ref><sp/>*output,<sp/>time_t<sp/>date,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>startIdx,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxCount);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_s_p_i_f_f_s_logger_1ac539407d1bfebe9443393ea2e4047e29" kindref="member">rowCount</ref>(time_t<sp/>date);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="102" refid="class_s_p_i_f_f_s_logger_1a0a83d73217bc8bada843092ae7d055e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>time_t<sp/><ref refid="class_s_p_i_f_f_s_logger_1a0a83d73217bc8bada843092ae7d055e8" kindref="member">_today</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103" refid="class_s_p_i_f_f_s_logger_1ad48c3983258885410e6b7d0a299e8e69" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="class_s_p_i_f_f_s_logger_1ad48c3983258885410e6b7d0a299e8e69" kindref="member">_lastProcess</ref><sp/>=<sp/>0;<sp/><sp/></highlight></codeline>
<codeline lineno="104" refid="class_s_p_i_f_f_s_logger_1a42017253e85b5f4978e4ba778960a62d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="class_s_p_i_f_f_s_logger_1a42017253e85b5f4978e4ba778960a62d" kindref="member">_processInterval</ref>;<sp/></highlight></codeline>
<codeline lineno="105" refid="class_s_p_i_f_f_s_logger_1afa47e4215bf7dc8a27704e5c10324fa8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="class_s_p_i_f_f_s_logger_1afa47e4215bf7dc8a27704e5c10324fa8" kindref="member">_daysToKeep</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="106" refid="class_s_p_i_f_f_s_logger_1af6227914a7bd060a26b5f83fa5641665" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_s_p_i_f_f_s_logger_1af6227914a7bd060a26b5f83fa5641665" kindref="member">_processNow</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="107" refid="class_s_p_i_f_f_s_logger_1a294e4b04bb7d26c6d63d4168d574221a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="class_s_p_i_f_f_s_logger_1a294e4b04bb7d26c6d63d4168d574221a" kindref="member">_directory</ref>[21];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="108" refid="class_s_p_i_f_f_s_logger_1af6c68f5bf3ceccde605a89cb929bb787" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="class_s_p_i_f_f_s_logger_1af6c68f5bf3ceccde605a89cb929bb787" kindref="member">_curPath</ref>[32];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_p_i_f_f_s_logger_1ad366d57e6ca7b721b27164e40fb342b3" kindref="member">_pathFromDate</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*output,<sp/>time_t<sp/>date);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_p_i_f_f_s_logger_1ae6edbf5e924957c107068fce73554737" kindref="member">_updateCurPath</ref>();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_p_i_f_f_s_logger_1afbb2b0583a0500e3e5eae006a6740992" kindref="member">_runRotation</ref>();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>time_t<sp/><ref refid="class_s_p_i_f_f_s_logger_1ae2c5d02510b4d7513893aaee7db3d137" kindref="member">_timegm</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>tm<sp/>*tm);</highlight></codeline>
<codeline lineno="129"><highlight class="normal">};</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="132" refid="class_s_p_i_f_f_s_logger_1afa8152a5d5d29fedbb04265cb4589359" refkind="member"><highlight class="normal"><ref refid="class_s_p_i_f_f_s_logger_1afa8152a5d5d29fedbb04265cb4589359" kindref="member">SPIFFSLogger&lt;T&gt;::SPIFFSLogger</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*directory,<sp/>uint16_t<sp/>daysToKeep,<sp/>uint16_t<sp/>processInterval)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>_daysToKeep(daysToKeep),<sp/>_processInterval(processInterval)</highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>strncpy(this-&gt;<ref refid="class_s_p_i_f_f_s_logger_1a294e4b04bb7d26c6d63d4168d574221a" kindref="member">_directory</ref>,<sp/>directory,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;<ref refid="class_s_p_i_f_f_s_logger_1a294e4b04bb7d26c6d63d4168d574221a" kindref="member">_directory</ref>)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="139" refid="class_s_p_i_f_f_s_logger_1abfc7ce5e1a8022705c6704e50edf087d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_p_i_f_f_s_logger_1abfc7ce5e1a8022705c6704e50edf087d" kindref="member">SPIFFSLogger&lt;T&gt;::init</ref>()</highlight></codeline>
<codeline lineno="140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;process();</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="145" refid="class_s_p_i_f_f_s_logger_1a34f24a3c6229653a31c166b899d43537" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_p_i_f_f_s_logger_1a34f24a3c6229653a31c166b899d43537" kindref="member">SPIFFSLogger&lt;T&gt;::process</ref>()</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>currentMillis<sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentMillis<sp/>-<sp/>this-&gt;_lastProcess<sp/>&gt;<sp/>this-&gt;_processInterval<sp/>||<sp/>this-&gt;_processNow)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>time_t<sp/>now<sp/>=<sp/>time(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>time_t<sp/>today<sp/>=<sp/>now<sp/>/<sp/>86400<sp/>*<sp/>86400;<sp/></highlight><highlight class="comment">//<sp/>remove<sp/>the<sp/>time<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;_today<sp/>!=<sp/>today)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>we<sp/>have<sp/>switched<sp/>to<sp/>another<sp/>day,<sp/>let&apos;s<sp/>run<sp/>the<sp/>required<sp/>updates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;_today<sp/>=<sp/>today;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;_updateCurPath();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;_runRotation();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;_lastProcess<sp/>=<sp/>currentMillis;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;_processNow<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="165" refid="class_s_p_i_f_f_s_logger_1a2e914dd1884de9900288564a41bc55a4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_s_p_i_f_f_s_logger_1a2e914dd1884de9900288564a41bc55a4" kindref="member">SPIFFSLogger&lt;T&gt;::write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;value)</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_s_p_i_f_f_s_log_data" kindref="compound">SPIFFSLogData</ref>&lt;T&gt;<sp/><ref refid="struct_s_p_i_f_f_s_log_data_1a071121efdc7f6d95adc4dcdf736a84ec" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_p_i_f_f_s_log_data_1a071121efdc7f6d95adc4dcdf736a84ec" kindref="member">data</ref>.timestampUTC<sp/>=<sp/>time(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_p_i_f_f_s_log_data_1a071121efdc7f6d95adc4dcdf736a84ec" kindref="member">data</ref>.data<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>File<sp/>f<sp/>=<sp/>SPIFFS.open(this-&gt;_curPath,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>f.write((uint8_t<sp/>*)&amp;<ref refid="struct_s_p_i_f_f_s_log_data_1a071121efdc7f6d95adc4dcdf736a84ec" kindref="member">data</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s_log_data_1a071121efdc7f6d95adc4dcdf736a84ec" kindref="member">data</ref>));</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>f.close();</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="177" refid="class_s_p_i_f_f_s_logger_1aeceb2db3a41feb387e874f247657e19c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_s_p_i_f_f_s_logger_1aeceb2db3a41feb387e874f247657e19c" kindref="member">SPIFFSLogger&lt;T&gt;::readRows</ref>(<ref refid="struct_s_p_i_f_f_s_log_data" kindref="compound">SPIFFSLogData&lt;T&gt;</ref><sp/>*output,<sp/>time_t<sp/>date,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>startIdx,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxCount)</highlight></codeline>
<codeline lineno="178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>path[32];</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;_pathFromDate(path,<sp/>date);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SPIFFS.exists(path))</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>File<sp/>f<sp/>=<sp/>SPIFFS.open(path,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>maxCount<sp/>=<sp/>min(maxCount,<sp/>f.size()<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s_log_data" kindref="compound">SPIFFSLogData&lt;T&gt;</ref>)<sp/>-<sp/>startIdx);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>f.seek(startIdx<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s_log_data" kindref="compound">SPIFFSLogData&lt;T&gt;</ref>));</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>f.read((uint8_t<sp/>*)output,<sp/>maxCount<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s_log_data" kindref="compound">SPIFFSLogData&lt;T&gt;</ref>));</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>f.close();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxCount;</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="194" refid="class_s_p_i_f_f_s_logger_1ac539407d1bfebe9443393ea2e4047e29" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_s_p_i_f_f_s_logger_1ac539407d1bfebe9443393ea2e4047e29" kindref="member">SPIFFSLogger&lt;T&gt;::rowCount</ref>(time_t<sp/>date)</highlight></codeline>
<codeline lineno="195"><highlight class="normal">{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>path[32];</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;_pathFromDate(path,<sp/>date);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SPIFFS.exists(path))</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>File<sp/>f<sp/>=<sp/>SPIFFS.open(path,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows<sp/>=<sp/>f.size()<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s_log_data" kindref="compound">SPIFFSLogData&lt;T&gt;</ref>);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>f.close();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rows;</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="210" refid="class_s_p_i_f_f_s_logger_1ad366d57e6ca7b721b27164e40fb342b3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_p_i_f_f_s_logger_1ad366d57e6ca7b721b27164e40fb342b3" kindref="member">SPIFFSLogger&lt;T&gt;::_pathFromDate</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*output,<sp/>time_t<sp/>date)</highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(date<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>date<sp/>=<sp/>this-&gt;_today;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tm<sp/>*tinfo<sp/>=<sp/>gmtime(&amp;date);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf_P(output,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_logFilenameFormat,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;_directory,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1900<sp/>+<sp/>tinfo-&gt;tm_year,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tinfo-&gt;tm_mon<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tinfo-&gt;tm_mday);</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="225" refid="class_s_p_i_f_f_s_logger_1ae6edbf5e924957c107068fce73554737" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_p_i_f_f_s_logger_1ae6edbf5e924957c107068fce73554737" kindref="member">SPIFFSLogger&lt;T&gt;::_updateCurPath</ref>()</highlight></codeline>
<codeline lineno="226"><highlight class="normal">{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_p_i_f_f_s_logger_1ad366d57e6ca7b721b27164e40fb342b3" kindref="member">SPIFFSLogger::_pathFromDate</ref>(this-&gt;_curPath,<sp/>this-&gt;_today);</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="231" refid="class_s_p_i_f_f_s_logger_1afbb2b0583a0500e3e5eae006a6740992" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_s_p_i_f_f_s_logger_1afbb2b0583a0500e3e5eae006a6740992" kindref="member">SPIFFSLogger&lt;T&gt;::_runRotation</ref>()</highlight></codeline>
<codeline lineno="232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>dirLen<sp/>=<sp/>strlen(this-&gt;_directory);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>Dir<sp/>tempDir<sp/>=<sp/>SPIFFS.openDir(this-&gt;_directory);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>datePart[5]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(tempDir.next())</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tm<sp/>tm<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dateStart<sp/>=<sp/>tempDir.fileName().c_str()<sp/>+<sp/>dirLen<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(datePart,<sp/>dateStart,<sp/>4);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tm.tm_year<sp/>=<sp/>atoi(datePart)<sp/>-<sp/>1900;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(datePart,<sp/>dateStart<sp/>+<sp/>4,<sp/>2);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datePart[2]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tm.tm_mon<sp/>=<sp/>atoi(datePart)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(datePart,<sp/>dateStart<sp/>+<sp/>6,<sp/>2);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tm.tm_mday<sp/>=<sp/>atoi(datePart);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>time_t<sp/>midnight<sp/>=<sp/><ref refid="class_s_p_i_f_f_s_logger_1ae2c5d02510b4d7513893aaee7db3d137" kindref="member">SPIFFSLogger::_timegm</ref>(&amp;tm)<sp/>/<sp/>86400<sp/>*<sp/>86400;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>file<sp/>is<sp/>too<sp/>old<sp/>and,<sp/>if<sp/>so,<sp/>delete<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midnight<sp/>&lt;<sp/>(this-&gt;_today<sp/>-<sp/>this-&gt;_daysToKeep<sp/>*<sp/>86400))</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS.remove(tempDir.fileName());</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="261" refid="class_s_p_i_f_f_s_logger_1ae2c5d02510b4d7513893aaee7db3d137" refkind="member"><highlight class="normal">time_t<sp/><ref refid="class_s_p_i_f_f_s_logger_1ae2c5d02510b4d7513893aaee7db3d137" kindref="member">SPIFFSLogger&lt;T&gt;::_timegm</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>tm<sp/>*tm)</highlight></codeline>
<codeline lineno="262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tm<sp/>start2000<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tm_sec</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tm_min</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tm_hour</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tm_mday</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tm_mon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>100,<sp/></highlight><highlight class="comment">//<sp/>tm_year</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tm_wday</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tm_yday</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tm_isdst</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mktime(tm)<sp/>-<sp/>(mktime(&amp;start2000)<sp/>-<sp/>946684800);</highlight></codeline>
<codeline lineno="276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>__SPIFFSLOGGER_H__</highlight></codeline>
    </programlisting>
    <location file="src/SPIFFSLogger.h"/>
  </compounddef>
</doxygen>
