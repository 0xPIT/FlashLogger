<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="class_s_p_i_f_f_s_logger" kind="class" language="C++" prot="public">
    <compoundname>SPIFFSLogger</compoundname>
    <basecompoundref refid="class_s_p_i_f_f_s_logger_base" prot="public" virt="non-virtual">SPIFFSLoggerBase</basecompoundref>
    <includes refid="_s_p_i_f_f_s_logger_8h" local="no">SPIFFSLogger.h</includes>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_p_i_f_f_s_logger_1afa8152a5d5d29fedbb04265cb4589359" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SPIFFSLogger&lt; T &gt;::SPIFFSLogger</definition>
        <argsstring>(const char *directory, uint16_t daysToKeep=7, uint16_t processInterval=1000)</argsstring>
        <name>SPIFFSLogger</name>
        <param>
          <type>const char *</type>
          <declname>directory</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>daysToKeep</declname>
          <defval>7</defval>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>processInterval</declname>
          <defval>1000</defval>
        </param>
        <briefdescription>
<para>Default constructor for <ref refid="class_s_p_i_f_f_s_logger" kindref="compound">SPIFFSLogger</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>directory</parametername>
</parameternamelist>
<parameterdescription>
<para>char array with the base directory where files will be stored. Should not include trailing slash and should be 20 characters or less. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>daysToKeep</parametername>
</parameternamelist>
<parameterdescription>
<para>number of days to keep in flash. Once files are past this age, they are deleted. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>processInterval</parametername>
</parameternamelist>
<parameterdescription>
<para>milliseconds between file directory updates and file rotation. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SPIFFSLogger.h" line="57" column="1" bodyfile="src/SPIFFSLogger.h" bodystart="89" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="class_s_p_i_f_f_s_logger_1a2e914dd1884de9900288564a41bc55a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t SPIFFSLogger&lt; T &gt;::write</definition>
        <argsstring>(const T &amp;value)</argsstring>
        <name>write</name>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Write the specified value to the end of the current log file, with the current timestamp. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to write </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SPIFFSLogger.h" line="64" column="1" bodyfile="src/SPIFFSLogger.h" bodystart="95" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="class_s_p_i_f_f_s_logger_1aeceb2db3a41feb387e874f247657e19c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t SPIFFSLogger&lt; T &gt;::readRows</definition>
        <argsstring>(SPIFFSLogData&lt; T &gt; *output, time_t date, size_t startIdx, size_t maxCount)</argsstring>
        <name>readRows</name>
        <param>
          <type><ref refid="struct_s_p_i_f_f_s_log_data" kindref="compound">SPIFFSLogData</ref>&lt; T &gt; *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>time_t</type>
          <declname>date</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>startIdx</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>maxCount</declname>
        </param>
        <briefdescription>
<para>Read data from a daily logfile into a buffer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer where data will be written </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>date</parametername>
</parameternamelist>
<parameterdescription>
<para>time_t representing the date of the file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>startIdx</parametername>
</parameternamelist>
<parameterdescription>
<para>0-based index of the entries to read (row number) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxCount</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum number of entries to read </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of entries read </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SPIFFSLogger.h" line="75" column="1" bodyfile="src/SPIFFSLogger.h" bodystart="107" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="class_s_p_i_f_f_s_logger_1a8d82d01f694528becba720e0612dc48d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t SPIFFSLogger&lt; T &gt;::readRowsBetween</definition>
        <argsstring>(SPIFFSLogData&lt; T &gt; *output, time_t fromTime, time_t toTime, size_t startIdx, size_t maxCount)</argsstring>
        <name>readRowsBetween</name>
        <param>
          <type><ref refid="struct_s_p_i_f_f_s_log_data" kindref="compound">SPIFFSLogData</ref>&lt; T &gt; *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>time_t</type>
          <declname>fromTime</declname>
        </param>
        <param>
          <type>time_t</type>
          <declname>toTime</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>startIdx</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>maxCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SPIFFSLogger.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_s_p_i_f_f_s_logger_1ac539407d1bfebe9443393ea2e4047e29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t SPIFFSLogger&lt; T &gt;::rowCount</definition>
        <argsstring>(time_t date)</argsstring>
        <name>rowCount</name>
        <param>
          <type>time_t</type>
          <declname>date</declname>
        </param>
        <briefdescription>
<para>Get the number of entries for the specified date. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>date</parametername>
</parameternamelist>
<parameterdescription>
<para>a time_t representing the day to check </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of entries </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SPIFFSLogger.h" line="85" column="1" bodyfile="src/SPIFFSLogger.h" bodystart="127" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="class_s_p_i_f_f_s_logger_base_1ad2270960852a999b0340fa4eab50f063" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SPIFFSLoggerBase::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <briefdescription>
<para>Initialize the logger. </para>        </briefdescription>
        <detaileddescription>
<para>Should be called after initializing SPIFFS and before before any other method. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SPIFFSLoggerBase.h" line="35" column="1" bodyfile="src/SPIFFSLoggerBase.cpp" bodystart="12" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="class_s_p_i_f_f_s_logger_base_1a22fdd2b540717853ae403edbc0ed1b7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SPIFFSLoggerBase::process</definition>
        <argsstring>()</argsstring>
        <name>process</name>
        <briefdescription>
<para>Process the file rotation and other required operations according to the defined processInterval. </para>        </briefdescription>
        <detaileddescription>
<para>Should be called as often as possible, i.e. in loop(). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SPIFFSLoggerBase.h" line="41" column="1" bodyfile="src/SPIFFSLoggerBase.cpp" bodystart="17" bodyend="34"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_s_p_i_f_f_s_logger_base_1a77a967ae68a680dea5a647200ba49815" prot="protected" static="no" mutable="no">
        <type>time_t</type>
        <definition>time_t SPIFFSLoggerBase::_today</definition>
        <argsstring></argsstring>
        <name>_today</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>current date, set in the last processing run </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SPIFFSLoggerBase.h" line="44" column="1" bodyfile="src/SPIFFSLoggerBase.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_p_i_f_f_s_logger_base_1ac1b33a4c97b2a45b2b178a261ebbb12c" prot="protected" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long SPIFFSLoggerBase::_lastProcess</definition>
        <argsstring></argsstring>
        <name>_lastProcess</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>last processing millis() </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SPIFFSLoggerBase.h" line="45" column="1" bodyfile="src/SPIFFSLoggerBase.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_p_i_f_f_s_logger_base_1a517fa4d3854283ba7b2dba9bf0d09c84" prot="protected" static="no" mutable="no">
        <type>const uint16_t</type>
        <definition>const uint16_t SPIFFSLoggerBase::_processInterval</definition>
        <argsstring></argsstring>
        <name>_processInterval</name>
        <briefdescription>
<para>ms between processing runs </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SPIFFSLoggerBase.h" line="46" column="1" bodyfile="src/SPIFFSLoggerBase.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_p_i_f_f_s_logger_base_1a8feb62f012879aca79d600cf217c2098" prot="protected" static="no" mutable="no">
        <type>const uint16_t</type>
        <definition>const uint16_t SPIFFSLoggerBase::_daysToKeep</definition>
        <argsstring></argsstring>
        <name>_daysToKeep</name>
        <briefdescription>
<para>number of days to keep logs for </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SPIFFSLoggerBase.h" line="47" column="1" bodyfile="src/SPIFFSLoggerBase.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_p_i_f_f_s_logger_base_1a978f0a636ce4d7a7f1640df124cc25ff" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SPIFFSLoggerBase::_processNow</definition>
        <argsstring></argsstring>
        <name>_processNow</name>
        <initializer>= true</initializer>
        <briefdescription>
<para>force processing now, even if the processing interval hasn&apos;t passed </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SPIFFSLoggerBase.h" line="48" column="1" bodyfile="src/SPIFFSLoggerBase.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_p_i_f_f_s_logger_base_1a829da5d8bf3d83ed24e608bb60fc623c" prot="protected" static="no" mutable="no">
        <type>char</type>
        <definition>char SPIFFSLoggerBase::_directory[21]</definition>
        <argsstring>[21]</argsstring>
        <name>_directory</name>
        <briefdescription>
<para>base directory for log files </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SPIFFSLoggerBase.h" line="49" column="1" bodyfile="src/SPIFFSLoggerBase.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_p_i_f_f_s_logger_base_1a7f79553c53c7b5b6c87aaaa104d5a1e3" prot="protected" static="no" mutable="no">
        <type>char</type>
        <definition>char SPIFFSLoggerBase::_curPath[32]</definition>
        <argsstring>[32]</argsstring>
        <name>_curPath</name>
        <briefdescription>
<para>path for today&apos;s file </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SPIFFSLoggerBase.h" line="50" column="1" bodyfile="src/SPIFFSLoggerBase.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_s_p_i_f_f_s_logger_base_1abfba26125f8b32b4c8e2e3d29d65b31f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SPIFFSLoggerBase::_pathFromDate</definition>
        <argsstring>(char *output, time_t date)</argsstring>
        <name>_pathFromDate</name>
        <param>
          <type>char *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>time_t</type>
          <declname>date</declname>
        </param>
        <briefdescription>
<para>Converts a time_t to that day&apos;s file path. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SPIFFSLoggerBase.h" line="57" column="1" bodyfile="src/SPIFFSLoggerBase.cpp" bodystart="36" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_s_p_i_f_f_s_logger_base_1aa5679e47e144e591b5fa90fb31b65cbd" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SPIFFSLoggerBase::_updateCurPath</definition>
        <argsstring>()</argsstring>
        <name>_updateCurPath</name>
        <briefdescription>
<para>Updates the current path to match today&apos;s date. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SPIFFSLoggerBase.h" line="62" column="1" bodyfile="src/SPIFFSLoggerBase.cpp" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="class_s_p_i_f_f_s_logger_base_1a2e9e45428e1ffbe989dd7679c5def4fe" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SPIFFSLoggerBase::_runRotation</definition>
        <argsstring>()</argsstring>
        <name>_runRotation</name>
        <briefdescription>
<para>Deletes files older than the defined age limit. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SPIFFSLoggerBase.h" line="67" column="1" bodyfile="src/SPIFFSLoggerBase.cpp" bodystart="55" bodyend="69"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="class_s_p_i_f_f_s_logger_base_1a0f0bc03eb433c0f2a9dd537e8be92892" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>time_t</type>
        <definition>time_t SPIFFSLoggerBase::_filenameToDate</definition>
        <argsstring>(const char *filename)</argsstring>
        <name>_filenameToDate</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Converts a filename in YYYYMMDD format to a time_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SPIFFSLoggerBase.h" line="72" column="1" bodyfile="src/SPIFFSLoggerBase.cpp" bodystart="71" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_s_p_i_f_f_s_logger_base_1ab520631b16a4bd22e55cada2781287a8" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>time_t</type>
        <definition>time_t SPIFFSLoggerBase::_timegm</definition>
        <argsstring>(struct tm *tm)</argsstring>
        <name>_timegm</name>
        <param>
          <type>struct tm *</type>
          <declname>tm</declname>
        </param>
        <briefdescription>
<para>Simple timegm function, since one is not available in the ESP libs. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SPIFFSLoggerBase.h" line="77" column="1" bodyfile="src/SPIFFSLoggerBase.cpp" bodystart="89" bodyend="104"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Minimal class template for binary data logging in ESP8266 SPIFFS. </para>    </briefdescription>
    <detaileddescription>
<para>Makes it easy to read, write and keep logs of relevant data, such as sensor readings in an efficient way, by storing data in raw, binary format along with a time_t. One file is created per UTC day to store the respective data, and deleted once it has reached the defined maximum age.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>type to store, e.g. a struct. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>SPIFFSLoggerBase</label>
        <link refid="class_s_p_i_f_f_s_logger_base"/>
      </node>
      <node id="2">
        <label>SPIFFSLogger&lt; T &gt;</label>
        <link refid="class_s_p_i_f_f_s_logger"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>SPIFFSLoggerBase</label>
        <link refid="class_s_p_i_f_f_s_logger_base"/>
      </node>
      <node id="4">
        <label>SPIFFSLogger&lt; T &gt;</label>
        <link refid="class_s_p_i_f_f_s_logger"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/SPIFFSLogger.h" line="47" column="1" bodyfile="src/SPIFFSLogger.h" bodystart="46" bodyend="86"/>
    <listofallmembers>
      <member refid="class_s_p_i_f_f_s_logger_base_1a7f79553c53c7b5b6c87aaaa104d5a1e3" prot="protected" virt="non-virtual"><scope>SPIFFSLogger</scope><name>_curPath</name></member>
      <member refid="class_s_p_i_f_f_s_logger_base_1a8feb62f012879aca79d600cf217c2098" prot="protected" virt="non-virtual"><scope>SPIFFSLogger</scope><name>_daysToKeep</name></member>
      <member refid="class_s_p_i_f_f_s_logger_base_1a829da5d8bf3d83ed24e608bb60fc623c" prot="protected" virt="non-virtual"><scope>SPIFFSLogger</scope><name>_directory</name></member>
      <member refid="class_s_p_i_f_f_s_logger_base_1a0f0bc03eb433c0f2a9dd537e8be92892" prot="protected" virt="non-virtual"><scope>SPIFFSLogger</scope><name>_filenameToDate</name></member>
      <member refid="class_s_p_i_f_f_s_logger_base_1ac1b33a4c97b2a45b2b178a261ebbb12c" prot="protected" virt="non-virtual"><scope>SPIFFSLogger</scope><name>_lastProcess</name></member>
      <member refid="class_s_p_i_f_f_s_logger_base_1abfba26125f8b32b4c8e2e3d29d65b31f" prot="protected" virt="non-virtual"><scope>SPIFFSLogger</scope><name>_pathFromDate</name></member>
      <member refid="class_s_p_i_f_f_s_logger_base_1a517fa4d3854283ba7b2dba9bf0d09c84" prot="protected" virt="non-virtual"><scope>SPIFFSLogger</scope><name>_processInterval</name></member>
      <member refid="class_s_p_i_f_f_s_logger_base_1a978f0a636ce4d7a7f1640df124cc25ff" prot="protected" virt="non-virtual"><scope>SPIFFSLogger</scope><name>_processNow</name></member>
      <member refid="class_s_p_i_f_f_s_logger_base_1a2e9e45428e1ffbe989dd7679c5def4fe" prot="protected" virt="non-virtual"><scope>SPIFFSLogger</scope><name>_runRotation</name></member>
      <member refid="class_s_p_i_f_f_s_logger_base_1ab520631b16a4bd22e55cada2781287a8" prot="protected" virt="non-virtual"><scope>SPIFFSLogger</scope><name>_timegm</name></member>
      <member refid="class_s_p_i_f_f_s_logger_base_1a77a967ae68a680dea5a647200ba49815" prot="protected" virt="non-virtual"><scope>SPIFFSLogger</scope><name>_today</name></member>
      <member refid="class_s_p_i_f_f_s_logger_base_1aa5679e47e144e591b5fa90fb31b65cbd" prot="protected" virt="non-virtual"><scope>SPIFFSLogger</scope><name>_updateCurPath</name></member>
      <member refid="class_s_p_i_f_f_s_logger_base_1ad2270960852a999b0340fa4eab50f063" prot="public" virt="non-virtual"><scope>SPIFFSLogger</scope><name>init</name></member>
      <member refid="class_s_p_i_f_f_s_logger_base_1a22fdd2b540717853ae403edbc0ed1b7f" prot="public" virt="non-virtual"><scope>SPIFFSLogger</scope><name>process</name></member>
      <member refid="class_s_p_i_f_f_s_logger_1aeceb2db3a41feb387e874f247657e19c" prot="public" virt="non-virtual"><scope>SPIFFSLogger</scope><name>readRows</name></member>
      <member refid="class_s_p_i_f_f_s_logger_1a8d82d01f694528becba720e0612dc48d" prot="public" virt="non-virtual"><scope>SPIFFSLogger</scope><name>readRowsBetween</name></member>
      <member refid="class_s_p_i_f_f_s_logger_1ac539407d1bfebe9443393ea2e4047e29" prot="public" virt="non-virtual"><scope>SPIFFSLogger</scope><name>rowCount</name></member>
      <member refid="class_s_p_i_f_f_s_logger_1afa8152a5d5d29fedbb04265cb4589359" prot="public" virt="non-virtual"><scope>SPIFFSLogger</scope><name>SPIFFSLogger</name></member>
      <member refid="class_s_p_i_f_f_s_logger_base_1ace02cadd2e608c940728ae9f5242bbcc" prot="protected" virt="non-virtual"><scope>SPIFFSLogger</scope><name>SPIFFSLoggerBase</name></member>
      <member refid="class_s_p_i_f_f_s_logger_1a2e914dd1884de9900288564a41bc55a4" prot="public" virt="non-virtual"><scope>SPIFFSLogger</scope><name>write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
