<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="class_s_p_i_f_f_s_logger" kind="class" language="C++" prot="public">
    <compoundname>SPIFFSLogger</compoundname>
    <includes refid="_s_p_i_f_f_s_logger_8h" local="no">SPIFFSLogger.h</includes>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_s_p_i_f_f_s_logger_1a0a83d73217bc8bada843092ae7d055e8" prot="protected" static="no" mutable="no">
        <type>time_t</type>
        <definition>time_t SPIFFSLogger&lt; T &gt;::_today</definition>
        <argsstring></argsstring>
        <name>_today</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>current date, set in the last processing run </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SPIFFSLogger.h" line="102" column="1" bodyfile="src/SPIFFSLogger.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_p_i_f_f_s_logger_1ad48c3983258885410e6b7d0a299e8e69" prot="protected" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long SPIFFSLogger&lt; T &gt;::_lastProcess</definition>
        <argsstring></argsstring>
        <name>_lastProcess</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>last processing millis() </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SPIFFSLogger.h" line="103" column="1" bodyfile="src/SPIFFSLogger.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_p_i_f_f_s_logger_1a42017253e85b5f4978e4ba778960a62d" prot="protected" static="no" mutable="no">
        <type>const uint16_t</type>
        <definition>const uint16_t SPIFFSLogger&lt; T &gt;::_processInterval</definition>
        <argsstring></argsstring>
        <name>_processInterval</name>
        <briefdescription>
<para>ms between processing runs </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SPIFFSLogger.h" line="104" column="1" bodyfile="src/SPIFFSLogger.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_p_i_f_f_s_logger_1afa47e4215bf7dc8a27704e5c10324fa8" prot="protected" static="no" mutable="no">
        <type>const uint16_t</type>
        <definition>const uint16_t SPIFFSLogger&lt; T &gt;::_daysToKeep</definition>
        <argsstring></argsstring>
        <name>_daysToKeep</name>
        <briefdescription>
<para>number of days to keep logs for </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SPIFFSLogger.h" line="105" column="1" bodyfile="src/SPIFFSLogger.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_p_i_f_f_s_logger_1af6227914a7bd060a26b5f83fa5641665" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SPIFFSLogger&lt; T &gt;::_processNow</definition>
        <argsstring></argsstring>
        <name>_processNow</name>
        <initializer>= true</initializer>
        <briefdescription>
<para>force processing now, even if the processing interval hasn&apos;t passed </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SPIFFSLogger.h" line="106" column="1" bodyfile="src/SPIFFSLogger.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_p_i_f_f_s_logger_1a294e4b04bb7d26c6d63d4168d574221a" prot="protected" static="no" mutable="no">
        <type>char</type>
        <definition>char SPIFFSLogger&lt; T &gt;::_directory[21]</definition>
        <argsstring>[21]</argsstring>
        <name>_directory</name>
        <briefdescription>
<para>base directory for log files </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SPIFFSLogger.h" line="107" column="1" bodyfile="src/SPIFFSLogger.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_p_i_f_f_s_logger_1af6c68f5bf3ceccde605a89cb929bb787" prot="protected" static="no" mutable="no">
        <type>char</type>
        <definition>char SPIFFSLogger&lt; T &gt;::_curPath[32]</definition>
        <argsstring>[32]</argsstring>
        <name>_curPath</name>
        <briefdescription>
<para>path for today&apos;s file </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SPIFFSLogger.h" line="108" column="1" bodyfile="src/SPIFFSLogger.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_p_i_f_f_s_logger_1afa8152a5d5d29fedbb04265cb4589359" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SPIFFSLogger&lt; T &gt;::SPIFFSLogger</definition>
        <argsstring>(const char *directory, uint16_t daysToKeep=7, uint16_t processInterval=1000)</argsstring>
        <name>SPIFFSLogger</name>
        <param>
          <type>const char *</type>
          <declname>directory</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>daysToKeep</declname>
          <defval>7</defval>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>processInterval</declname>
          <defval>1000</defval>
        </param>
        <briefdescription>
<para>Default constructor for <ref refid="class_s_p_i_f_f_s_logger" kindref="compound">SPIFFSLogger</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>directory</parametername>
</parameternamelist>
<parameterdescription>
<para>char array with the base directory where files will be stored. Should not include trailing slash and should be 20 characters or less. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>daysToKeep</parametername>
</parameternamelist>
<parameterdescription>
<para>number of days to keep in flash. Once files are past this age, they are deleted. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>processInterval</parametername>
</parameternamelist>
<parameterdescription>
<para>milliseconds between file directory updates and file rotation. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SPIFFSLogger.h" line="62" column="1" bodyfile="src/SPIFFSLogger.h" bodystart="132" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="class_s_p_i_f_f_s_logger_1abfc7ce5e1a8022705c6704e50edf087d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SPIFFSLogger&lt; T &gt;::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <briefdescription>
<para>Initialize the logger. </para>        </briefdescription>
        <detaileddescription>
<para>Should be called after initializing SPIFFS and before before any other method. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SPIFFSLogger.h" line="67" column="1" bodyfile="src/SPIFFSLogger.h" bodystart="139" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="class_s_p_i_f_f_s_logger_1a34f24a3c6229653a31c166b899d43537" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SPIFFSLogger&lt; T &gt;::process</definition>
        <argsstring>()</argsstring>
        <name>process</name>
        <briefdescription>
<para>Process the file rotation and other required operations according to the defined processInterval. </para>        </briefdescription>
        <detaileddescription>
<para>Should be called as often as possible, i.e. in loop(). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SPIFFSLogger.h" line="73" column="1" bodyfile="src/SPIFFSLogger.h" bodystart="145" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="class_s_p_i_f_f_s_logger_1a2e914dd1884de9900288564a41bc55a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t SPIFFSLogger&lt; T &gt;::write</definition>
        <argsstring>(const T &amp;value)</argsstring>
        <name>write</name>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Write the specified value to the end of the current log file, with the current timestamp. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to write </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SPIFFSLogger.h" line="80" column="1" bodyfile="src/SPIFFSLogger.h" bodystart="165" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="class_s_p_i_f_f_s_logger_1aeceb2db3a41feb387e874f247657e19c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t SPIFFSLogger&lt; T &gt;::readRows</definition>
        <argsstring>(SPIFFSLogData&lt; T &gt; *output, time_t date, size_t startIdx, size_t maxCount)</argsstring>
        <name>readRows</name>
        <param>
          <type><ref refid="struct_s_p_i_f_f_s_log_data" kindref="compound">SPIFFSLogData</ref>&lt; T &gt; *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>time_t</type>
          <declname>date</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>startIdx</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>maxCount</declname>
        </param>
        <briefdescription>
<para>Read data from a daily logfile into a buffer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer where data will be written </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>date</parametername>
</parameternamelist>
<parameterdescription>
<para>time_t representing the date of the file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>startIdx</parametername>
</parameternamelist>
<parameterdescription>
<para>0-based index of the entries to read (row number) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxCount</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum number of entries to read </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of entries read </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SPIFFSLogger.h" line="91" column="1" bodyfile="src/SPIFFSLogger.h" bodystart="177" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="class_s_p_i_f_f_s_logger_1ac539407d1bfebe9443393ea2e4047e29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t SPIFFSLogger&lt; T &gt;::rowCount</definition>
        <argsstring>(time_t date)</argsstring>
        <name>rowCount</name>
        <param>
          <type>time_t</type>
          <declname>date</declname>
        </param>
        <briefdescription>
<para>Get the number of entries for the specified date. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>date</parametername>
</parameternamelist>
<parameterdescription>
<para>a time_t representing the day to check </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of entries </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SPIFFSLogger.h" line="99" column="1" bodyfile="src/SPIFFSLogger.h" bodystart="194" bodyend="207"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_s_p_i_f_f_s_logger_1ad366d57e6ca7b721b27164e40fb342b3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SPIFFSLogger&lt; T &gt;::_pathFromDate</definition>
        <argsstring>(char *output, time_t date)</argsstring>
        <name>_pathFromDate</name>
        <param>
          <type>char *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>time_t</type>
          <declname>date</declname>
        </param>
        <briefdescription>
<para>Converts a time_t to that day&apos;s file path. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SPIFFSLogger.h" line="113" column="1" bodyfile="src/SPIFFSLogger.h" bodystart="210" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="class_s_p_i_f_f_s_logger_1ae6edbf5e924957c107068fce73554737" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SPIFFSLogger&lt; T &gt;::_updateCurPath</definition>
        <argsstring>()</argsstring>
        <name>_updateCurPath</name>
        <briefdescription>
<para>Updates the current path to match today&apos;s date. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SPIFFSLogger.h" line="118" column="1" bodyfile="src/SPIFFSLogger.h" bodystart="225" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="class_s_p_i_f_f_s_logger_1afbb2b0583a0500e3e5eae006a6740992" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SPIFFSLogger&lt; T &gt;::_runRotation</definition>
        <argsstring>()</argsstring>
        <name>_runRotation</name>
        <briefdescription>
<para>Deletes files older than the defined age limit. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SPIFFSLogger.h" line="123" column="1" bodyfile="src/SPIFFSLogger.h" bodystart="231" bodyend="258"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="class_s_p_i_f_f_s_logger_1ae2c5d02510b4d7513893aaee7db3d137" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>time_t</type>
        <definition>time_t SPIFFSLogger&lt; T &gt;::_timegm</definition>
        <argsstring>(struct tm *tm)</argsstring>
        <name>_timegm</name>
        <param>
          <type>struct tm *</type>
          <declname>tm</declname>
        </param>
        <briefdescription>
<para>Simple timegm function, since one is not available in the ESP libs. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SPIFFSLogger.h" line="128" column="1" bodyfile="src/SPIFFSLogger.h" bodystart="261" bodyend="276"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Minimal class template for binary data logging in ESP8266 SPIFFS. </para>    </briefdescription>
    <detaileddescription>
<para>Makes it easy to read, write and keep logs of relevant data, such as sensor readings in an efficient way, by storing data in raw, binary format along with a time_t. One file is created per UTC day to store the respective data, and deleted once it has reached the defined maximum age.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>type to store, e.g. a struct. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <location file="src/SPIFFSLogger.h" line="52" column="1" bodyfile="src/SPIFFSLogger.h" bodystart="51" bodyend="129"/>
    <listofallmembers>
      <member refid="class_s_p_i_f_f_s_logger_1af6c68f5bf3ceccde605a89cb929bb787" prot="protected" virt="non-virtual"><scope>SPIFFSLogger</scope><name>_curPath</name></member>
      <member refid="class_s_p_i_f_f_s_logger_1afa47e4215bf7dc8a27704e5c10324fa8" prot="protected" virt="non-virtual"><scope>SPIFFSLogger</scope><name>_daysToKeep</name></member>
      <member refid="class_s_p_i_f_f_s_logger_1a294e4b04bb7d26c6d63d4168d574221a" prot="protected" virt="non-virtual"><scope>SPIFFSLogger</scope><name>_directory</name></member>
      <member refid="class_s_p_i_f_f_s_logger_1ad48c3983258885410e6b7d0a299e8e69" prot="protected" virt="non-virtual"><scope>SPIFFSLogger</scope><name>_lastProcess</name></member>
      <member refid="class_s_p_i_f_f_s_logger_1ad366d57e6ca7b721b27164e40fb342b3" prot="protected" virt="non-virtual"><scope>SPIFFSLogger</scope><name>_pathFromDate</name></member>
      <member refid="class_s_p_i_f_f_s_logger_1a42017253e85b5f4978e4ba778960a62d" prot="protected" virt="non-virtual"><scope>SPIFFSLogger</scope><name>_processInterval</name></member>
      <member refid="class_s_p_i_f_f_s_logger_1af6227914a7bd060a26b5f83fa5641665" prot="protected" virt="non-virtual"><scope>SPIFFSLogger</scope><name>_processNow</name></member>
      <member refid="class_s_p_i_f_f_s_logger_1afbb2b0583a0500e3e5eae006a6740992" prot="protected" virt="non-virtual"><scope>SPIFFSLogger</scope><name>_runRotation</name></member>
      <member refid="class_s_p_i_f_f_s_logger_1ae2c5d02510b4d7513893aaee7db3d137" prot="protected" virt="non-virtual"><scope>SPIFFSLogger</scope><name>_timegm</name></member>
      <member refid="class_s_p_i_f_f_s_logger_1a0a83d73217bc8bada843092ae7d055e8" prot="protected" virt="non-virtual"><scope>SPIFFSLogger</scope><name>_today</name></member>
      <member refid="class_s_p_i_f_f_s_logger_1ae6edbf5e924957c107068fce73554737" prot="protected" virt="non-virtual"><scope>SPIFFSLogger</scope><name>_updateCurPath</name></member>
      <member refid="class_s_p_i_f_f_s_logger_1abfc7ce5e1a8022705c6704e50edf087d" prot="public" virt="non-virtual"><scope>SPIFFSLogger</scope><name>init</name></member>
      <member refid="class_s_p_i_f_f_s_logger_1a34f24a3c6229653a31c166b899d43537" prot="public" virt="non-virtual"><scope>SPIFFSLogger</scope><name>process</name></member>
      <member refid="class_s_p_i_f_f_s_logger_1aeceb2db3a41feb387e874f247657e19c" prot="public" virt="non-virtual"><scope>SPIFFSLogger</scope><name>readRows</name></member>
      <member refid="class_s_p_i_f_f_s_logger_1ac539407d1bfebe9443393ea2e4047e29" prot="public" virt="non-virtual"><scope>SPIFFSLogger</scope><name>rowCount</name></member>
      <member refid="class_s_p_i_f_f_s_logger_1afa8152a5d5d29fedbb04265cb4589359" prot="public" virt="non-virtual"><scope>SPIFFSLogger</scope><name>SPIFFSLogger</name></member>
      <member refid="class_s_p_i_f_f_s_logger_1a2e914dd1884de9900288564a41bc55a4" prot="public" virt="non-virtual"><scope>SPIFFSLogger</scope><name>write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
